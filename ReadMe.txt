Веб-приложение "Цель" (Aim)
Приложение, которое поможет вам контролировать выполнение поставленных перед собой задач
не только с помощью силы воли, но и с помощью окружающих.

Что использовал (для Aim-0.1):
1) Язык и среда разработки: Java + Eclipse
2) БД и инструмент создания: MySQL + MySQL Workbench
3) Средство обращения к БД: JDBC
4) Сервер: Apache TomCat
5) Back-end: Servlet, JSP, JSTL, EL
6) Front-end: HTML, CSS, JS (JQuery, JQuery-UI)
7) Cборка: Maven

Функционал (для Aim-0.1):
1) Регистрация пользователей
2) Постановка и удаление задач
3) Объединение пользователей в группы
4) Рейтинг по группам

Как это работает:
1) Регистрируйтесь
2) Создайте Группу и пригласите в неё кого хотите или
присоединитесь к уже существующей
3) Поставьте задачу и если хотите, то сделайте её
видимой в Группах
4) Надоевшую Группу можно удалить, только если вы её создавали.
В противном случае, просто её покиньте.

Архитектура проекта:
Создавался на основе шаблона MVC. Большинство запросов проходит следующим образом
(рассмотрим на примере запроса "Добавить задачу"):
VIEW - addAim.jsp, только отображение данных, по нажатию отсылает к -->
-->CONTROLLER - ru.aim.servlets.AddAim.java обращается к вспомогательным классам
ru.aim.modelmanagers.(WebAimManager, WebAimGroupManager), которые либо 
напрямую обращаются к Базе Данных (БД), либо (гораздо чаще) работают с использованием -->
-->MODEL - ru.aim.models(WebAim, WebAimGroup), готовые объекты и/или модели с помощью -->
-->CONTROLLER - ru.aim.servlets.AddAim.java, помещаются в соответствующую область видимости
("scope") и происходит переотправка поступившего запроса или к другому сервлету
ru.aim.servlets.updateSessionData.java или -->
-->VIEW - addAim.jsp или Cabinet.jsp

Как запускать: 
1) Если брать готовый Aim.war:
- скопировать в ..\Tomcat 8.5\webapps
(запускал и тестировал только на 8.5)
- Для MySQL создайте пользователя "dbuser" c паролем "dbuser"
(смотри web.xml), 
для создания базы используйте файлы aim.mwb или aimScript.sql
2) Если пересобирать Maven:
- отредактируйте defaultWebBase, baseURL, dbuserid etc в web.xml согласно вашим данным
- скопировать в ..\Tomcat 8.5\webapps
- БД с помощью aim.mwb или aimScript.sql

Update on 30.06.2017:
1) Первое и основное, курс по JQuery прослушан, отпуск отгулян, из всего этого
был переработан компонент View из триады MVC. Появились замечательные директории
"css" и "scripts". Дизайн стал менее аскетичным и более симпатичным.
2) Исправлена ошибка чтения ResultSet для групп, теперь совместные задачи
отображаются как надо.
3) На ближайшее будущее надо прикрутить немного Ajax, после чего совесть
позволит поднять версию проекта до Aim-0.2, ну а там и долгожданные 
Spring и Hibernate не за горами.

Update on 30.06.2017:
1) По нажатию кнопок теперь не происходит перезагрузка всей страницы,
Ajax с помощью JQuery оказался хорошим и простым подспорьем, дополнительными
библиотеками для JSON решил не пользоваться, в следующем проекте опробую,
здесь избыточно.
2) Навстречу Hibernate (уже знаю как пишется)

Ответы на напрашивающиеся вопросы:

- Где тесты?
- Тесты написаны лишь для моделей, и лежат в той же директории.
Это плохо и неправильно, да.

- Непоследовательность в коде, одни и теже вещи сделаны по разному?
- Это первая итерация и первое знакомство с Web, всё писалось по горячим следам
обучения, потому и пробовал разное.

- Где Spring, где Hibernate, где Java 8 хотя бы с парой лямбда выражений, где..?
- В версии Aim-0.2, код перепишется под Hibernate, изучением онного сейчас и занят.

- Вы действительно считаете, что с таким уровнем можете устроиться Java-разработчиком?
- Я не знаю, знаю, что однажды будет размещена версия Aim-х.++,
которая позволит мне стать Java Junior Developer.


